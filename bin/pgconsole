#!/usr/bin/env ruby

require 'packetgen'
require 'packetgen/config'
require 'packetgen/utils'

use_pry = false
begin
  require 'pry'
  use_pry = true
  puts "use Pry!"
rescue LoadError
  require 'irb'
  require 'irb/completion'
end

include PacketGen

def parse(binary_str, first_header: nil)
  Packet.parse binary_str, first_header: first_header
end

def capture(options={})
  Packet.capture(options) { |packet| yield packet if block_given? }
end

def read(filename)
  Packet.read filename
end

def write(filename, packets)
  Packet.write filename, packets
end

@config = PacketGen::Config.new

def config
  @config
end

def start_message(use_pry)
  print "\npgconsole uses #{use_pry ? 'Pry' : 'IRB'}\n\n"
end

start_message use_pry

if use_pry
  Pry.config.prompt = [
    proc { |target_self, nest_level, pry|
      "#{pry.config.prompt_name}(#{Pry.view_clip(target_self)})#{":#{nest_level}" unless nest_level.zero?}> "
    },
    proc { |target_self, nest_level, pry|
      "#{pry.config.prompt_name}(#{Pry.view_clip(target_self)})#{":#{nest_level}" unless nest_level.zero?}* "
    }
  ]
  Pry.config.prompt_name = 'pg'
  Pry.start
else
  IRB.setup nil
  irb = IRB::Irb.new(IRB::WorkSpace.new(binding))
  IRB.conf[:MAIN_CONTEXT] = irb.context
  irb.context.auto_indent_mode = true
  irb.context.prompt_i = "pg(%m)>"
  irb.context.prompt_s = "pg(%m)*"
  irb.context.prompt_c = "pg(%m)*"

  trap("SIGINT") do
    irb.signal_handle
  end

  begin
    catch(:IRB_EXIT) do
      irb.eval_input
    end
  ensure
    IRB.irb_at_exit
  end
end
